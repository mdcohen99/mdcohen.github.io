[
  {
    "objectID": "posts/first-post/index.html",
    "href": "posts/first-post/index.html",
    "title": "Test for first post",
    "section": "",
    "text": "This is a test for the first post.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "posts/second-post/index.html",
    "href": "posts/second-post/index.html",
    "title": "second post",
    "section": "",
    "text": "So who is actually good at football in the Big Ten? Turns out, it’s not the school you’re thinking of.\nLoading libraries and data first\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(paletteer)\nlibrary(showtext)\n\n\nLoading required package: sysfonts\nLoading required package: showtextdb\n\n\nCode\nfont_add_google(\"Montserrat\", \"montserrat\")\nshowtext_auto()\n\n\n\n\nCode\nlogs2024 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs24.csv\")\n\n\nRows: 1717 Columns: 79\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (11): Location, Opponent, Result, OT, Bowl.x, TeamURL, Outcome, Bowl.y,...\ndbl  (64): Rk, Gtm, Points, PointsOpp, PassCmp, PassAtt, PassPct, PassYds, P...\nlgl   (3): Score, TeamScore, OpponentScore\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nlogs2025 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs25.csv\")\n\n\nRows: 711 Columns: 77\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (9): Location, Opponent, Result, OT, TeamURL, Outcome, Team, Conferenc...\ndbl  (64): Rk, Gtm, Points, PointsOpp, PassCmp, PassAtt, PassPct, PassYds, P...\nlgl   (3): Score, TeamScore, OpponentScore\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nbig10 &lt;- c(\"Nebraska Cornhuskers\", \"Iowa Hawkeyes\", \"Minnesota Golden Gophers\", \"Illinois Fighting Illini\", \"Northwestern Wildcats\", \"Wisconsin Badgers\", \"Indiana Hoosiers\", \"Purdue Boilermakers\", \"Ohio State Buckeyes\", \"Michigan Wolverines\", \"Michigan State Spartans\", \"Penn State Nittany Lions\", \"Rutgers Scarlet Knights\", \"Maryland Terrapins\", \"Washinton Huskies\", \"UCLA Bruins\", \"USC Trojans\", \"Oregon Ducks\")\n\n\nbigten2024 &lt;- logs2024 |&gt; filter(TeamFull %in% big10)\nbigten2025 &lt;- logs2025 |&gt; filter(TeamFull %in% big10)\n\n\n\nFinding the Big Ten’s best scoring offenses\nTo be clear, this is not a fan blog. We here at this publication dedicated to whatever Derek assigned me to do this week are committed to impactful journalism with complete and utter objectivity.\nBut the author of this post did attend Indiana University for his undergrad years, and may have a bit of a soft spot for this specific dataset which is just 2024 and 2025 data and — as of writing this post before Indiana plays Oregon this weekend — this is undoubtedly the most incredible stretch of Indiana football success in the history of the program. It isn’t even close for the team with the most losses in the history of the sport at a Division I level. So given the rare opportunity we have to discuss Hoosier football glory, let’s see just how good Indiana has been relative to a league that has produced the last two national champions and three of the last four teams to play in the national title game (Indiana beat two of those teams during the span of this dataset).\nOkay maybe this is actually a fan blog.\nLet’s look first at which Big Ten teams had the best scoring offenses in each of the 2024 and 2025 seasons. Let’s start with 2024. And yes, I made sure to check Indiana’s branding guide for the correct crimson color hex code.\n\n\nCode\nbigten2024 |&gt; \n  group_by(TeamFull) |&gt; \n  summarize(points_per_game = mean(Points, na.rm = TRUE)) |&gt; \n  arrange(desc(points_per_game)) |&gt; \n  ggplot(aes(x = reorder(TeamFull, points_per_game), y = points_per_game)) +\n  geom_col(fill = \"#990000\") +\n  coord_flip() +\n  labs(title = \"Indiana leads Big Ten scoring offenses in 2024... by a lot\", subtitle = \"Five Big Ten surpassed 30 point per game averages in the 2024 season. Four of them made the College Football Playoff. But only one team — Indiana — surpassed the 40 point per game threshold.\", y = \"Points per game\", x = \"\") +\n   theme_minimal() +\n  theme(\n  axis.title = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n    title = element_text(size = 13, family = \"montserrat\", face=\"bold\"),\n    plot.subtitle = element_text(family = \"montserrat\", size = 9, face = \"plain\"),\n    plot.caption = element_text(family = \"montserrat\", size = 8, face = \"italic\"),\n  axis.text = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n  )\n\n\n\n\n\n\n\n\n\nIndiana averaged 41.31 points per game in 2024. That’s the clear leader among Big Ten teams (for what it’s worth, that was also second best nationally behind Miami — and nothing at all went wrong for Miami in 2024 obviously!). The next closest is Ohio State at 35.69. That’s certainly a notable gap!\nShould we mention that Ohio State still beat Indiana and went on to win the national championship? I guess that’s probably important to note that scoring a lot of points doesn’t make you the BEST team. But it doesn’t hurt!\nNow let’s look at 2025. What changed, if anything?\n\n\nCode\nbigten2025 |&gt; \n  group_by(TeamFull) |&gt; \n  summarize(points_per_game = mean(Points, na.rm = TRUE)) |&gt; \n  arrange(desc(points_per_game)) |&gt; \n  ggplot(aes(x = reorder(TeamFull, points_per_game), y = points_per_game)) +\n  geom_col(fill = \"#990000\") +\n  coord_flip() +\n  labs(title = \"New faces join the Big Ten's top scoring offenses.\", subtitle = \"USC currently leads the Big Ten in scoring offense, but some less regarded teams like Nebraska have made big surges in 2025 compared to a season ago. Indiana still remains in the top two. But this time is indeed two.\", y = \"Points per game\", x = \"\") +\n   theme_minimal() +\n  theme(\n  axis.title = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n    title = element_text(size = 13, family = \"montserrat\", face=\"bold\"),\n    plot.subtitle = element_text(family = \"montserrat\", size = 9, face = \"plain\"),\n    plot.caption = element_text(family = \"montserrat\", size = 8, face = \"italic\"),\n  axis.text = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n  )\n\n\n\n\n\n\n\n\n\nThere are also a lot big scoring numbers at the top of the chart here. There are four teams averaging more than 40 points so far this year.\nSo is scoring up this year?\n\n\nCode\nb1g2025ptsavg &lt;- bigten2025 |&gt; \n  summarize(avgpts = mean(Points, na.rm = TRUE)) |&gt; \n  pull(avgpts)\n\nb1g2024ptsavg &lt;- bigten2024 |&gt; \n  summarize(avgpts = mean(Points, na.rm = TRUE)) |&gt; \n  pull(avgpts)\n\npct_change &lt;- ((b1g2025ptsavg - b1g2024ptsavg) / b1g2024ptsavg) * 100\n\navg_data &lt;- tibble(\n  Year = c(2024, 2025),\n  Average = c(b1g2024ptsavg, b1g2025ptsavg)\n)\n\nggplot(avg_data, aes(x = factor(Year), y = Average, group = 1)) +\n  geom_line(color = \"#990000\", linewidth = 1.2) +\n  geom_point(size = 3, color = \"#990000\") +\n  labs(\n    title = \"Scoring in the Big Ten is up in 2025\",\n    subtitle = \"But this data isn't balanced yet. It is comparing the full 2024 season against the first five games in 2025.\",\n    x = \"Year\",\n    y = \"Average Points\"\n  ) +\n  theme_minimal() +\n  theme(\n  axis.title = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n    title = element_text(size = 13, family = \"montserrat\", face=\"bold\"),\n    plot.subtitle = element_text(family = \"montserrat\", size = 9, face = \"plain\"),\n    plot.caption = element_text(family = \"montserrat\", size = 8, face = \"italic\"),\n  axis.text = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n  )\n\n\n\n\n\n\n\n\n\nScoring is up about 27% in the Big Ten this year. Granted, most of the games played are still non-conference games so we can’t really compare that number too much given the higher unbalanced sample size of cupcake games relative to power conference opponents.\nSo let’s check that out.\n\n\nCode\nb1g2025ptsavg &lt;- bigten2025 |&gt; \n  summarize(avgpts = mean(Points, na.rm = TRUE)) |&gt;\n  pull(avgpts)\n\nadjustedb1g2024ptsavg &lt;- bigten2024 |&gt; filter(Gtm &lt;= 5) |&gt; \n  summarize(avgpts = mean(Points, na.rm = TRUE)) |&gt; \n  pull(avgpts)\n\nadjusted_pct_change &lt;- ((b1g2025ptsavg-adjustedb1g2024ptsavg)/adjustedb1g2024ptsavg)*100\n\navg_data &lt;- tibble(\n  Year = c(2024, 2025),\n  Average = c(adjustedb1g2024ptsavg, b1g2025ptsavg)\n)\n\nggplot(avg_data, aes(x = factor(Year), y = Average, group = 1)) +\n  geom_line(color = \"#990000\", linewidth = 1.2) +\n  geom_point(size = 3, color = \"#990000\") +\n  labs(\n    title = \"Even with adjusted data, scoring is still up in 2025\",\n    subtitle = \"Through the first five games of both the 2024 and 2025 seasons, this year's average scoring in the Big Ten is up by about five points per game.\",\n    x = \"Year\",\n    y = \"Average Points\"\n  ) +\n  theme_minimal() +\n  theme(\n  axis.title = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n    title = element_text(size = 13, family = \"montserrat\", face=\"bold\"),\n    plot.subtitle = element_text(family = \"montserrat\", size = 9, face = \"plain\"),\n    plot.caption = element_text(family = \"montserrat\", size = 8, face = \"italic\"),\n  axis.text = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n  )\n\n\n\n\n\n\n\n\n\nTurns out scoring is still up over the first games of the season (balanced where being five games into the 2025 season), but quite a bit less than 27%. 17.4% is still a pretty big jump in scoring through.\nAnd Indiana is still second in the Big Ten. The Hoosiers are scoring 47.8 points per game so far, less than a point behind Big Ten leaders USC."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/hoosier_scoring/index.html",
    "href": "posts/hoosier_scoring/index.html",
    "title": "second post",
    "section": "",
    "text": "So who is actually good at football in the Big Ten? Turns out, it’s not the school you’re thinking of.\nLoading libraries and data first\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(paletteer)\nlibrary(showtext)\n\n\nLoading required package: sysfonts\nLoading required package: showtextdb\n\n\nCode\nfont_add_google(\"Montserrat\", \"montserrat\")\nshowtext_auto()\n\n\n\n\nCode\nlogs2024 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs24.csv\")\n\n\nRows: 1717 Columns: 79\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (11): Location, Opponent, Result, OT, Bowl.x, TeamURL, Outcome, Bowl.y,...\ndbl  (64): Rk, Gtm, Points, PointsOpp, PassCmp, PassAtt, PassPct, PassYds, P...\nlgl   (3): Score, TeamScore, OpponentScore\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nlogs2025 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs25.csv\")\n\n\nRows: 711 Columns: 77\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (9): Location, Opponent, Result, OT, TeamURL, Outcome, Team, Conferenc...\ndbl  (64): Rk, Gtm, Points, PointsOpp, PassCmp, PassAtt, PassPct, PassYds, P...\nlgl   (3): Score, TeamScore, OpponentScore\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nbig10 &lt;- c(\"Nebraska Cornhuskers\", \"Iowa Hawkeyes\", \"Minnesota Golden Gophers\", \"Illinois Fighting Illini\", \"Northwestern Wildcats\", \"Wisconsin Badgers\", \"Indiana Hoosiers\", \"Purdue Boilermakers\", \"Ohio State Buckeyes\", \"Michigan Wolverines\", \"Michigan State Spartans\", \"Penn State Nittany Lions\", \"Rutgers Scarlet Knights\", \"Maryland Terrapins\", \"Washinton Huskies\", \"UCLA Bruins\", \"USC Trojans\", \"Oregon Ducks\")\n\n\nbigten2024 &lt;- logs2024 |&gt; filter(TeamFull %in% big10)\nbigten2025 &lt;- logs2025 |&gt; filter(TeamFull %in% big10)\n\n\n\nFinding the Big Ten’s best scoring offenses\nTo be clear, this is not a fan blog. We here at this publication dedicated to whatever Derek assigned me to do this week are committed to impactful journalism with complete and utter objectivity.\nBut the author of this post did attend Indiana University for his undergrad years, and may have a bit of a soft spot for this specific dataset which is just 2024 and 2025 data and — as of writing this post before Indiana plays Oregon this weekend — this is undoubtedly the most incredible stretch of Indiana football success in the history of the program. It isn’t even close for the team with the most losses in the history of the sport at a Division I level. So given the rare opportunity we have to discuss Hoosier football glory, let’s see just how good Indiana has been relative to a league that has produced the last two national champions and three of the last four teams to play in the national title game (Indiana beat two of those teams during the span of this dataset).\nOkay maybe this is actually a fan blog.\nLet’s look first at which Big Ten teams had the best scoring offenses in each of the 2024 and 2025 seasons. Let’s start with 2024. And yes, I made sure to check Indiana’s branding guide for the correct crimson color hex code.\n\n\nCode\nbigten2024 |&gt; \n  group_by(TeamFull) |&gt; \n  summarize(points_per_game = mean(Points, na.rm = TRUE)) |&gt; \n  arrange(desc(points_per_game)) |&gt; \n  ggplot(aes(x = reorder(TeamFull, points_per_game), y = points_per_game)) +\n  geom_col(fill = \"#990000\") +\n  coord_flip() +\n  labs(title = \"Indiana leads Big Ten scoring offenses in 2024... by a lot\", subtitle = \"Five Big Ten surpassed 30 point per game averages in the 2024 season. Four of them made the College Football Playoff. But only one team — Indiana — surpassed the 40 point per game threshold.\", y = \"Points per game\", x = \"\") +\n   theme_minimal() +\n  theme(\n  axis.title = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n    title = element_text(size = 13, family = \"montserrat\", face=\"bold\"),\n    plot.subtitle = element_text(family = \"montserrat\", size = 9, face = \"plain\"),\n    plot.caption = element_text(family = \"montserrat\", size = 8, face = \"italic\"),\n  axis.text = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n  )\n\n\n\n\n\n\n\n\n\nIndiana averaged 41.31 points per game in 2024. That’s the clear leader among Big Ten teams (for what it’s worth, that was also second best nationally behind Miami — and nothing at all went wrong for Miami in 2024 obviously!). The next closest is Ohio State at 35.69. That’s certainly a notable gap!\nShould we mention that Ohio State still beat Indiana and went on to win the national championship? I guess that’s probably important to note that scoring a lot of points doesn’t make you the BEST team. But it doesn’t hurt!\nNow let’s look at 2025. What changed, if anything?\n\n\nCode\nbigten2025 |&gt; \n  group_by(TeamFull) |&gt; \n  summarize(points_per_game = mean(Points, na.rm = TRUE)) |&gt; \n  arrange(desc(points_per_game)) |&gt; \n  ggplot(aes(x = reorder(TeamFull, points_per_game), y = points_per_game)) +\n  geom_col(fill = \"#990000\") +\n  coord_flip() +\n  labs(title = \"New faces join the Big Ten's top scoring offenses.\", subtitle = \"USC currently leads the Big Ten in scoring offense, but some less regarded teams like Nebraska have made big surges in 2025 compared to a season ago. Indiana still remains in the top two. But this time is indeed two.\", y = \"Points per game\", x = \"\") +\n   theme_minimal() +\n  theme(\n  axis.title = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n    title = element_text(size = 13, family = \"montserrat\", face=\"bold\"),\n    plot.subtitle = element_text(family = \"montserrat\", size = 9, face = \"plain\"),\n    plot.caption = element_text(family = \"montserrat\", size = 8, face = \"italic\"),\n  axis.text = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n  )\n\n\n\n\n\n\n\n\n\nThere are also a lot big scoring numbers at the top of the chart here. There are four teams averaging more than 40 points so far this year.\nSo is scoring up this year?\n\n\nCode\nb1g2025ptsavg &lt;- bigten2025 |&gt; \n  summarize(avgpts = mean(Points, na.rm = TRUE)) |&gt; \n  pull(avgpts)\n\nb1g2024ptsavg &lt;- bigten2024 |&gt; \n  summarize(avgpts = mean(Points, na.rm = TRUE)) |&gt; \n  pull(avgpts)\n\npct_change &lt;- ((b1g2025ptsavg - b1g2024ptsavg) / b1g2024ptsavg) * 100\n\navg_data &lt;- tibble(\n  Year = c(2024, 2025),\n  Average = c(b1g2024ptsavg, b1g2025ptsavg)\n)\n\nggplot(avg_data, aes(x = factor(Year), y = Average, group = 1)) +\n  geom_line(color = \"#990000\", linewidth = 1.2) +\n  geom_point(size = 3, color = \"#990000\") +\n  labs(\n    title = \"Scoring in the Big Ten is up in 2025\",\n    subtitle = \"But this data isn't balanced yet. It is comparing the full 2024 season against the first five games in 2025.\",\n    x = \"Year\",\n    y = \"Average Points\"\n  ) +\n  theme_minimal() +\n  theme(\n  axis.title = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n    title = element_text(size = 13, family = \"montserrat\", face=\"bold\"),\n    plot.subtitle = element_text(family = \"montserrat\", size = 9, face = \"plain\"),\n    plot.caption = element_text(family = \"montserrat\", size = 8, face = \"italic\"),\n  axis.text = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n  )\n\n\n\n\n\n\n\n\n\nScoring is up about 27% in the Big Ten this year. Granted, most of the games played are still non-conference games so we can’t really compare that number too much given the higher unbalanced sample size of cupcake games relative to power conference opponents.\nSo let’s check that out.\n\n\nCode\nb1g2025ptsavg &lt;- bigten2025 |&gt; \n  summarize(avgpts = mean(Points, na.rm = TRUE)) |&gt;\n  pull(avgpts)\n\nadjustedb1g2024ptsavg &lt;- bigten2024 |&gt; filter(Gtm &lt;= 5) |&gt; \n  summarize(avgpts = mean(Points, na.rm = TRUE)) |&gt; \n  pull(avgpts)\n\nadjusted_pct_change &lt;- ((b1g2025ptsavg-adjustedb1g2024ptsavg)/adjustedb1g2024ptsavg)*100\n\navg_data &lt;- tibble(\n  Year = c(2024, 2025),\n  Average = c(adjustedb1g2024ptsavg, b1g2025ptsavg)\n)\n\nggplot(avg_data, aes(x = factor(Year), y = Average, group = 1)) +\n  geom_line(color = \"#990000\", linewidth = 1.2) +\n  geom_point(size = 3, color = \"#990000\") +\n  labs(\n    title = \"Even with adjusted data, scoring is still up in 2025\",\n    subtitle = \"Through the first five games of both the 2024 and 2025 seasons, this year's average scoring in the Big Ten is up by about five points per game.\",\n    x = \"Year\",\n    y = \"Average Points\"\n  ) +\n  theme_minimal() +\n  theme(\n  axis.title = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n    title = element_text(size = 13, family = \"montserrat\", face=\"bold\"),\n    plot.subtitle = element_text(family = \"montserrat\", size = 9, face = \"plain\"),\n    plot.caption = element_text(family = \"montserrat\", size = 8, face = \"italic\"),\n  axis.text = element_text(size = 6, family = \"montserrat\", face = \"bold\"),\n  )\n\n\n\n\n\n\n\n\n\nTurns out scoring is still up over the first games of the season (balanced where being five games into the 2025 season), but quite a bit less than 27%. 17.4% is still a pretty big jump in scoring through.\nAnd Indiana is still second in the Big Ten. The Hoosiers are scoring 47.8 points per game so far, less than a point behind Big Ten leaders USC."
  },
  {
    "objectID": "posts/b1g_plays/index.html",
    "href": "posts/b1g_plays/index.html",
    "title": "Does running a lot of plays matter in college football? The myth of up-tempo offenses.",
    "section": "",
    "text": "Few other sports have quite the differences in style of play of college football. Different regions of the country sprouted different blue prints of offense. The sport is often defined by wacky, high-speed spread offenses or teams that seem not be aware the forward pass exists (talking about you Iowa!).\nHere, we’re going to look at one very specific (or well, not so specific these days) region of college football: The Big Ten.\nThese days, with the league stretching from coast to coast, there are many different stylistic and strategic choices made in building an offense. No longer is the Big Ten just a grind-it-out, physical, running league. Well, okay not Iowa again, but point stands.\nBecause there are so many styles and speeds of offense, does it matter how many plays you run in a game? Does running a lot of plays mean you are a good team? Let’s use the data to find out.\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nLoading required package: sysfonts\n\nLoading required package: showtextdb\n\n\n\n\nCode\nlogs2024 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs24.csv\")\n\n\nRows: 1717 Columns: 79\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (11): Location, Opponent, Result, OT, Bowl.x, TeamURL, Outcome, Bowl.y,...\ndbl  (64): Rk, Gtm, Points, PointsOpp, PassCmp, PassAtt, PassPct, PassYds, P...\nlgl   (3): Score, TeamScore, OpponentScore\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nlogs2025 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs25.csv\")\n\n\nRows: 711 Columns: 77\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (9): Location, Opponent, Result, OT, TeamURL, Outcome, Team, Conferenc...\ndbl  (64): Rk, Gtm, Points, PointsOpp, PassCmp, PassAtt, PassPct, PassYds, P...\nlgl   (3): Score, TeamScore, OpponentScore\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nbig10 &lt;- c(\"Nebraska Cornhuskers\", \"Iowa Hawkeyes\", \"Minnesota Golden Gophers\", \"Illinois Fighting Illini\", \"Northwestern Wildcats\", \"Wisconsin Badgers\", \"Indiana Hoosiers\", \"Purdue Boilermakers\", \"Ohio State Buckeyes\", \"Michigan Wolverines\", \"Michigan State Spartans\", \"Penn State Nittany Lions\", \"Rutgers Scarlet Knights\", \"Maryland Terrapins\", \"Washinton Huskies\", \"UCLA Bruins\", \"USC Trojans\", \"Oregon Ducks\")\n\n\nbigten2024 &lt;- logs2024 |&gt; filter(TeamFull %in% big10)\nbigten2025 &lt;- logs2025 |&gt; filter(TeamFull %in% big10)\n\n\n\n\nCode\nb1g2024plays &lt;- bigten2024 |&gt; \n  group_by(TeamFull) |&gt; \n  summarise(totalplays = sum(TotalPlays), avgplays = mean(TotalPlays)) |&gt; \n  arrange(desc(totalplays))\n            \n\nb1g2025plays &lt;- bigten2025 |&gt; \n  group_by(TeamFull) |&gt; \n  summarise(totalplays = sum(TotalPlays), avgplays = mean(TotalPlays)) |&gt; \n  arrange(desc(totalplays))\n\ncombinedplays &lt;- b1g2024plays |&gt; \n  inner_join(b1g2025plays, by = \"TeamFull\", suffix = c(\"2024\", \"2025\")) |&gt;\n  mutate(combined_total = totalplays2024 + totalplays2025,\n         combined_avg = (avgplays2024 + avgplays2025) / 2) \n\nb1g2024plays\n\n\n# A tibble: 17 × 3\n   TeamFull                 totalplays avgplays\n   &lt;chr&gt;                         &lt;dbl&gt;    &lt;dbl&gt;\n 1 Penn State Nittany Lions       1052     65.8\n 2 Ohio State Buckeyes             989     61.8\n 3 Oregon Ducks                    959     68.5\n 4 Rutgers Scarlet Knights         912     70.2\n 5 USC Trojans                     900     69.2\n 6 Nebraska Cornhuskers            883     67.9\n 7 Maryland Terrapins              864     72  \n 8 Indiana Hoosiers                852     65.5\n 9 Minnesota Golden Gophers        816     62.8\n10 Illinois Fighting Illini        805     61.9\n11 Michigan Wolverines             794     61.1\n12 Wisconsin Badgers               787     65.6\n13 Iowa Hawkeyes                   761     58.5\n14 Michigan State Spartans         746     62.2\n15 Northwestern Wildcats           746     62.2\n16 UCLA Bruins                     736     61.3\n17 Purdue Boilermakers             676     56.3\n\n\nCode\nb1g2025plays\n\n\n# A tibble: 17 × 3\n   TeamFull                 totalplays avgplays\n   &lt;chr&gt;                         &lt;dbl&gt;    &lt;dbl&gt;\n 1 Illinois Fighting Illini        365     60.8\n 2 Rutgers Scarlet Knights         364     72.8\n 3 Indiana Hoosiers                357     71.4\n 4 Nebraska Cornhuskers            345     69  \n 5 Purdue Boilermakers             345     69  \n 6 Maryland Terrapins              338     67.6\n 7 Oregon Ducks                    337     67.4\n 8 USC Trojans                     331     66.2\n 9 Iowa Hawkeyes                   328     65.6\n10 Northwestern Wildcats           323     64.6\n11 Minnesota Golden Gophers        321     64.2\n12 Penn State Nittany Lions        321     64.2\n13 Wisconsin Badgers               318     63.6\n14 Michigan State Spartans         317     63.4\n15 Michigan Wolverines             317     63.4\n16 UCLA Bruins                     312     62.4\n17 Ohio State Buckeyes             303     60.6\n\n\nCode\ncombinedplays |&gt; select(TeamFull, combined_total, combined_avg)\n\n\n# A tibble: 17 × 3\n   TeamFull                 combined_total combined_avg\n   &lt;chr&gt;                             &lt;dbl&gt;        &lt;dbl&gt;\n 1 Penn State Nittany Lions           1373         65.0\n 2 Ohio State Buckeyes                1292         61.2\n 3 Oregon Ducks                       1296         68.0\n 4 Rutgers Scarlet Knights            1276         71.5\n 5 USC Trojans                        1231         67.7\n 6 Nebraska Cornhuskers               1228         68.5\n 7 Maryland Terrapins                 1202         69.8\n 8 Indiana Hoosiers                   1209         68.5\n 9 Minnesota Golden Gophers           1137         63.5\n10 Illinois Fighting Illini           1170         61.4\n11 Michigan Wolverines                1111         62.2\n12 Wisconsin Badgers                  1105         64.6\n13 Iowa Hawkeyes                      1089         62.1\n14 Michigan State Spartans            1063         62.8\n15 Northwestern Wildcats              1069         63.4\n16 UCLA Bruins                        1048         61.9\n17 Purdue Boilermakers                1021         62.7\n\n\nWe’re going to look at this in a few time frames. First, we’ll look at the 2024 season alone, then 2025 (so far) alone and then lastly, a combined chart.\nWe’ll have to look at this two ways each year. First total plays for the season and then try to standardize it for average per game since not every team played the same number of games.\n\n\nCode\nb1g2024plays |&gt; \n  ggplot(aes(x = reorder(TeamFull, totalplays), y = totalplays, fill = TeamFull)) +\n  coord_flip() +\n  geom_col(fill = \"#db7069\") +\n  labs(title = \"Teams with deep playoff runs ran the most total plays. That makes sense!\",\n       x = \"\",\n       y = \"Total Plays\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 9.5, face = \"bold\", hjust = 0.5, family = \"montserrat\"),\n        axis.text = element_text(family = \"montserrat\"),\n        axis.title = element_text(family = \"montserrat\"))\n\n\n\n\n\n\n\n\n\nCode\nb1g2024plays |&gt; \n  ggplot(aes(x = reorder(TeamFull, avgplays), y = avgplays, fill = TeamFull)) +\n  coord_flip() +\n  geom_col(fill = \"#db7069\") +\n  labs(title = \"But running a lot of plays doesn't equal team success\",\n       x = \"\",\n       y = \"Plays per game\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5, family = \"montserrat\"),\n        axis.text = element_text(family = \"montserrat\"), \n        axis.title = element_text(family = \"montserrat\"))\n\n\n\n\n\n\n\n\n\nIt shouldn’t come as much of a surprise to see Ohio State, Penn State and Oregon at the top of the total plays list. Those three played the most games. Ohio State won the national championship. Penn State made the national semifinals. Oregon played in the Big Ten title game and the Rose Bowl. So that doesn’t mean much.\nWhat’s more interesting? Rutgers is the next team up after those three. Rutgers did play in a bowl game last year, but went just 7-6. The averages will tell us a better story.\nWhen we look at what teams averaged the most plays, it’s a lot of mediocre teams at the top of the chart. Rutgers, Maryland and USC had the top three most plays per game. Those three teams combined to go 18-20 in 2024. Maryland won just won Big Ten game — against USC, ironically. So running a lot of plays didn’t necessarily mean a team was winning a lot of games based on 2024 data. The teams that were more successful (we’ll use the Big Ten teams that made the Playoff for the sake of this: Ohio State, Penn State, Oregon, Indiana) are scattered throughout this list. Ohio State had the fifth fewest plays of all Big Ten teams, and won the national championship.\nWhat we see here is that it’s not about the quantity of plays, but about executing each team’s respective style of play.\nDoes that change in 2025?\n\n\nCode\nb1g2025plays |&gt; \n  ggplot(aes(x = reorder(TeamFull, totalplays), y = totalplays, fill = TeamFull)) +\n  coord_flip() +\n  geom_col(fill = \"#db7069\") +\n  labs(title = \"Total Plays by Big Ten Teams in 2025\",\n       x = \"\",\n       y = \"Total Plays\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5, family = \"montserrat\"),\n        axis.text = element_text(family = \"montserrat\"), \n        axis.title = element_text(family = \"montserrat\"))\n\n\n\n\n\n\n\n\n\nCode\nb1g2025plays |&gt; \n  ggplot(aes(x = reorder(TeamFull, avgplays), y = avgplays, fill = TeamFull)) +\n  coord_flip() +\n  geom_col(fill = \"#db7069\") +\n  labs(title = \"Ohio State runs the fewest plays per game, and is the nation's best team\",\n       x = \"\",\n       y = \"Plays per game\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5, family = \"montserrat\"),\n        axis.text = element_text(family = \"montserrat\"),\n        axis.title = element_text(family = \"montserrat\"))\n\n\n\n\n\n\n\n\n\nThe total sum of plays is going to hold a bit more weight here because the season is ongoing in 2025 and teams have generally played the same number of games to this ponit in mid-October. Here, we see a mix of good and not so good teams here. Again, emphasizing our understanding that a quantity of plays doesn’t say much about a team other than just how it likes to play. Same thing goes for the average plays per game chart.\nIn both total plays and per game average, Ohio State is last in the Big Ten. Ohio State is also undefeated and the No. 1 team in the country. Seems like being slow isn’t slowing them down.\nWhich teams made the biggest changes from 2024 to 2025? Let’s visualize that.\n\n\nCode\ncombinedplays_long &lt;- combinedplays |&gt;\n  select(TeamFull, totalplays2024, totalplays2025) |&gt;\n  pivot_longer(\n    cols = starts_with(\"totalplays\"),\n    names_to = \"Year\",\n    values_to = \"TotalPlays\"\n  ) |&gt;\n  mutate(\n    Year = recode(Year,\n                  \"totalplays2024\" = \"2024\",\n                  \"totalplays2025\" = \"2025\"))\n\nggplot(combinedplays_long, aes(x = reorder(TeamFull, TotalPlays), y = TotalPlays, fill = Year)) +\n  coord_flip() +\n  geom_col(position = \"stack\") +\n  labs(\n    title = \"Big Ten Team Total Plays: 2024 vs 2025\",\n    x = \"\",\n    y = \"Total Plays\",\n    fill = \"Season\"\n  ) +\n  theme_minimal() +\n  theme(\n   plot.title = element_text(size = 12, face = \"bold\", family = \"montserrat\"),\n   axis.text = element_text(family = \"montserrat\"), \n   axis.title = element_text(family = \"montserrat\")) +\n   scale_fill_manual(values = c(\n    \"2024\" = \"#db7069\",  \n    \"2025\" = \"#2b6cb0\"  \n  ))\n\n\n\n\n\n\n\n\n\nCode\ncombinedplays |&gt;\n  group_by(TeamFull) |&gt; \n  summarize(pct_change = ((avgplays2025 - avgplays2024) / avgplays2024) * 100) |&gt; \n  arrange(desc(pct_change)) |&gt; \n  ggplot(aes(x = reorder(TeamFull, pct_change), y = pct_change, fill = TeamFull)) +\n  coord_flip() +\n  geom_col() +\n  labs(title = \"With a new coach, Purdue had the biggest jump in average plays per game this year.\",\n       x = \"\",\n       y = \"Percent Change in Plays per Game\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 9, face = \"bold\", family = \"montserrat\"),\n    axis.text = element_text(family = \"montserrat\"), \n    axis.title = element_text(family = \"montserrat\"), \n    legend.position = \"none\") +\n    scale_fill_manual(values = c(\n    \"Purdue Boilermakers\" = \"#647D4BFF\",  \n    \"Iowa Hawkeyes\" = \"#647D4BFF\",\n    \"Indiana Hoosiers\" = \"#647D4BFF\",\n    \"Northwestern Wildcats\" = \"#647D4BFF\",\n    \"Michigan Wolverines\" = \"#647D4BFF\",\n    \"Rutgers Scarlet Knights\" = \"#647D4BFF\",\n    \"Minnesota Golden Gophers\" = \"#647D4BFF\",\n    \"Michigan State Spartans\" = \"#647D4BFF\",\n    \"UCLA Bruins\" = \"#647D4BFF\",\n    \"Nebraska Cornhuskers\" = \"#647D4BFF\", \n    \"Oregon Ducks\" = \"#db7069\", \n    \"Illinois Fighting Illini\" = \"#db7069\",\n    \"Ohio State Buckeyes\" = \"#db7069\",\n    \"Penn State Nittany Lions\" = \"#db7069\",\n    \"Wisconsin Badgers\" = \"#db7069\",\n    \"USC Trojans\" = \"#db7069\",\n    \"Maryland Terrapins\" = \"#db7069\"\n  ))\n\n\n\n\n\n\n\n\n\nPurdue saw a jump of more than 20% in its average plays run per game from 2024 to 2025. What changed? A new a head coach. Purdue fired Ryan Walters after the 2024 season and hired Barry Odom. And while Purdue has at least outwardly appeared improved this year, notably hanging with Notre Dame for a bit, the Boilermakers are still just 2-4 and 0-3 in the Big Ten.\nThe style changed, but the result hasn’t yet. Which gets at another factor the plays data can’t show us: Purdue and other teams at the bottom of the Big Ten just aren’t talented enough.\nIt’s also worth noting that Iowa, IOWA!!!!, had the second largest increase in plays per game and yet……. they still aren’t good on offense! It’s at least a concerted effort to shift the narrative around what has been one of the nation’s most futile offenses, but the results have still been largely the same despite the higher speed of play.\nOn the flip side, Maryland has seen the largest decrease in plays per game, and is improved over last season, approaching bowl eligibility.\nHigh tempo offenses are often described as better offesnes in the media because they tend to create more highlights and score a lot of points. But running a lot of plays is clearly not a strong metric of deciding if an offense is good.\nIf you run 100 plays or three plays, what matters is that you score points. Scoring points wins football games. It doesn’t matter how you do it. A team’s efficiency and execution on offense within the sphere of their own scheme is a better determination of what makes a good team."
  },
  {
    "objectID": "posts/volleyball_waffle/index.html",
    "href": "posts/volleyball_waffle/index.html",
    "title": "How does Maryland volleyball’s scoring compare to the rest of the Big Ten? Well, it’s not great.",
    "section": "",
    "text": "It’s a been a struggle thus far for the volleyball Terps in the beautiful basement of the Xfinity Center, more commonly known as the Pavilion. Maryland is 1-6 thus far in Big Ten play and 8-9 overall for the season. It’s one Big Ten win came over Rutgers, which is one of just two teams behind Maryland in the Big Ten standings. Ohio State has been the only other team worse than Maryland, still winless in Big Ten play. Here, we’re going to see how the Maryland volleyball team scores its points (or, really, lack thereof) and how that compares to some other Big Ten teams.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.2\n✔ ggplot2   4.0.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(waffle)\n\n\n\n\nCode\nvb_data &lt;- read_csv(\"https://raw.githubusercontent.com/dwillis/NCAAWomensVolleyballData/main/data/ncaa_womens_volleyball_matchstats_2025.csv\")\n\n\nRows: 4878 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): team, opponent, home_away, result\ndbl  (33): ncaa_id, team_score, opponent_score, s, kills, errors, total_atta...\ndate  (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nvb_data |&gt; \n  filter(team == \"Maryland\") |&gt; \n  summarize(total_kills = sum(kills), total_aces = sum(aces), total_opp_errors = sum(defensive_errors), total_solo_blocks = sum(block_solos))\n\n\n# A tibble: 1 × 4\n  total_kills total_aces total_opp_errors total_solo_blocks\n        &lt;dbl&gt;      &lt;dbl&gt;            &lt;dbl&gt;             &lt;dbl&gt;\n1         525         72              257                13\n\n\nCode\nmd &lt;- c(\"Kills\" = 525, \"Aces\" = 72, \"Opponent Errors\" = 257, \"Solo Blocks\" = 13)\n\nwaffle(\n  md/2, \n  rows = 10, \n  title = \"How Maryland volleyball scores its points in 2025\",\n  xlab = \"1 square = 1 point\",\n  colors = c(\"black\", \"gold\", \"red\", \"blue\")\n)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\nℹ The deprecated feature was likely used in the waffle package.\n  Please report the issue to the authors.\n\n\n\n\n\n\n\n\n\nHere, we’ve made a waffle chart representing the various forms of Maryland points this season. We can see the bulk of Maryland’s scoring came on kills, which makes some sense, but also relied a lot on opponent errors. Maryland at first glance appears to not have many aces, at least relative to kills, but the Maryland has actually been one of the better teams in the Big Ten for aces this season.\nThat said, how does Maryland compare to the rest of the Big Ten?\nWe’ve added in two other teams to our chart: Indiana and Nebraska. Indiana makes sense to include since it employs Maryland’s former coach Steve Aird and we can compare how Maryland has fared under its new leadership. Nebraska is, well, Nebraska. Undefeated, No. 1 ranked in the country, all that stuff.\nSpoiler: Maryland doesn’t look so good here.\n\n\nCode\nvb_data |&gt; \n  filter(team == \"Indiana\") |&gt; \n  summarize(total_kills = sum(kills), total_aces = sum(aces), total_opp_errors = sum(defensive_errors), total_solo_blocks = sum(block_solos))\n\n\n# A tibble: 1 × 4\n  total_kills total_aces total_opp_errors total_solo_blocks\n        &lt;dbl&gt;      &lt;dbl&gt;            &lt;dbl&gt;             &lt;dbl&gt;\n1         597         68              258                25\n\n\nCode\niu &lt;- c(\"Kills\" = 597, \"Aces\" = 68, \"Opponent Errors\" = 258, \"Solo Blocks\" = 25)\n\nvb_data |&gt; \n  filter(team == \"Nebraska\") |&gt; \n  summarize(total_kills = sum(kills), total_aces = sum(aces), total_opp_errors = sum(defensive_errors), total_solo_blocks = sum(block_solos))\n\n\n# A tibble: 1 × 4\n  total_kills total_aces total_opp_errors total_solo_blocks\n        &lt;dbl&gt;      &lt;dbl&gt;            &lt;dbl&gt;             &lt;dbl&gt;\n1         777         60              325                24\n\n\nCode\nne &lt;- c(\"Kills\" = 777, \"Aces\" = 60, \"Opponent Errors\" = 325, \"Solo Blocks\" = 24)\nmd_adjusted &lt;- c(\"Kills\" = 525, \"Aces\" = 72, \"Opponent Errors\" = 257, \"Solo Blocks\" = 13, 314)\niu_adjusted &lt;- c(\"Kills\" = 597, \"Aces\" = 68, \"Opponent Errors\" = 258, \"Solo Blocks\" = 25, 238)\n\n\n\niron(\n  waffle(\n  md_adjusted/2, \n  rows = 10, \n  title = \"How Maryland volleyball scores its points in 2025\",\n  xlab = \"1 square = 1 point\",\n  colors = c(\"black\", \"gold\", \"red\", \"blue\", \"white\")\n  ),\nwaffle(\n  iu_adjusted/2, \n  rows = 10, \n  title = \"How Indiana volleyball scores its points in 2025\",\n  xlab = \"1 square = 1 point\",\n  colors = c(\"black\", \"gold\", \"red\", \"blue\", \"white\")\n  ),\nwaffle(\n  ne/2,\n  rows = 10,\n  title = \"How Nebraska volleyball scores its points in 2025\",\n  xlab = \"1 square = 1 point\",\n  colors = c(\"black\", \"gold\", \"red\", \"blue\")\n  )\n)\n\n\n\n\n\n\n\n\n\nYeah, Nebraska is pretty impressive. Indiana has scored 81 more points than Maryland this season and the Hoosers are off to a good start in Big Ten play overall (at least relative to usual standard) and cracked the top 25 rankings. Indiana has a good margin over Maryland in kills, but other stats are pretty close. And that speaks a bit to how competitive the Big Ten is.\nBut wow that all pales in comparison to Nebraska. While Indiana has 81 points more than Maryland in total (which doesn’t feel like a large margin especially given a much larger difference in overall record), Nebraska has scored 314 more points, which is essentially another stratosphere relative to Maryland. Indiana is top four in the Big Ten right now, and Nebraska still has 238 more points than Aird’s team, too. That’s nuts.\nNebraska actually has the fewest aces of the three teams, but has been so noticeably better in kills and either forcing or profiting off opponent errors that it doesn’t matter. Nebraska’s size allows it to dominate on the court at a level of few other programs, and it does this annually.\nIt’s pretty visually obvious from these charts how far Maryland lags behind the leader of the conference. But that’s not a level Maryland has ever really competed at, and frankly there are only about a handful of teams in the country which can be at that level. This year, no one has been at Nebraska’s level as the Huskers are 16-0.\nInvestment in volleyball does indeed work!"
  },
  {
    "objectID": "posts/thirdandsix/index.html",
    "href": "posts/thirdandsix/index.html",
    "title": "Is running the ball on third and medium distance dumb? It might not be fun, but it may well be justified.",
    "section": "",
    "text": "Truly, with the amount of money that offensive coordinators get paid these days one might think that maybe, just maybe, they might be able to not get out of their own way on third downs. It seems like a near weekly occurrence than some play call is so mind mindbogglingly absurd that even a casual fan would be left confused.\nAre offensive coordinators stupid? Are we stupid? Are we all stupid?\nHere, we’re going to load in a dataset of every college football play before 2021 and 2025 and narrow it for specifically every third and six play to give a perfect medium distance that would leave an offensive coordinator with an actual choice to make. Let’s see what teams decided to do, and whether the person being made six-to-seven figures to call plays should keep doing it, or if it’s time to let the fan off his couch and into the booth.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.2\n✔ ggplot2   4.0.0     ✔ tibble    3.3.0\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(cfbfastR)\n\n\n\n\nCode\ncfbplays &lt;- load_cfb_pbp(seasons = 2021:2025)\n\n\n\n\nCode\nthirdandsix &lt;- cfbplays |&gt; \n  filter(down == 3 & distance == 6)\n\n\nWe’re going to look here at what the most common type of play is on third and six.\n\n\nCode\ntotal_running_plays &lt;- thirdandsix |&gt; \n  filter(play_type == \"Rush\") |&gt; \n  nrow()\n\nrun_play_pct &lt;- (total_running_plays/16447) * 100\n\ntotal_running_plays\n\n\n[1] 3362\n\n\nCode\nrun_play_pct\n\n\n[1] 20.44142\n\n\n\n\nCode\nthirdandsix |&gt; \n  group_by(play_type) |&gt;\n  summarize(n = n()) |&gt; \n  arrange(desc(n)) |&gt; \n  filter(n &gt; 50) |&gt; \n  ggplot(aes(x = reorder(play_type, -n),  y = n, fill = play_type)) +\n  geom_col() +\n  labs(title = \"Turns out, college teams do indeed heavily rely on passing plays on third-and-medium\",\n       x = \"\",\n       y = \"Number of Plays\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_text(hjust = 0.5, size = 14),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    axis.text.x = element_text(size = 10, angle = 45, hjust = 1)\n  )\n\n\n\n\n\n\n\n\n\nBy far, the most common play is a pass. Both completed passes and incomplete passes occur more frequently than rushes. That makes sense, third and six is a bit far for a running play. But that sure doesn’t stop offensive coordinators from calling them.\nAbout 20% of all third and six plays since 2021 have been rushes. Running on third and six seems a little bit nuts. Does it work at all?\n\n\nCode\nthirdandsix |&gt; \n  filter(play_type == \"Rush\") |&gt; \n  summarize(avg_yards = mean(yards_gained))\n\n\n# A tibble: 1 × 1\n  avg_yards\n      &lt;dbl&gt;\n1      5.69\n\n\nWell, that may explain why coordinators run the ball a noticeable amount on third and six! It does, occasionally, work. Teams average 5.7 yards gained when running the ball on this down and distance. That is, of course, less than six, but it is pretty close that running the ball may seem like a worth gamble. Especially given that there are more pass incompletions than rushing attempts at all, a rush may seem a little bit safer.\nA run on third down may also be getting close to the first down maker in these situation because defenses aren’t expecting it and are more focused on defending the pass. That can leave open running lanes.\nWhich teams do this the most?\n\n\nCode\nthirdandsix |&gt; \n  filter(play_type == \"Rush\") |&gt; \n  group_by(pos_team) |&gt; \n  summarize(rush_attempts = n()) |&gt; \n  arrange(desc(rush_attempts))\n\n\n# A tibble: 289 × 2\n   pos_team      rush_attempts\n   &lt;chr&gt;                 &lt;int&gt;\n 1 Army                     44\n 2 Navy                     39\n 3 Air Force                37\n 4 West Virginia            30\n 5 Baylor                   29\n 6 New Mexico               29\n 7 UNLV                     27\n 8 Michigan                 24\n 9 Ole Miss                 24\n10 Florida State            23\n# ℹ 279 more rows\n\n\nCode\n#cfbplays |&gt; filter(play_type == \"Rush\") |&gt; group_by(pos_team) |&gt; summarize(rush_attempts = n()) |&gt; arrange(desc(rush_attempts))\n\n\nWell well well, if it isn’t the service academies. Throughout the entire dataset regardless of it being third down or any down, Army, Navy and Air Force run the ball far more than any other team. So it makes quite a bit of sense to see these three teams at the top of the culprits running the ball on third down.\nBut it is interesting to see some teams that have become known for throwing the ball (ahem, Ole Miss) this far up the list. There are a group of schools at the bottom of this list that have run the ball on third and six just once. These are our favorite schools, a group of courageous ball knowers that like to have fun. We’re talking about you: Bentley, Bowie State (maryland schools!), Brown (fun nerds!), Bryant, Georgetown College Kentucky, Kentucky Christian, Laurinburg, Michigan Tech, Morehouse, New Haven, North Central College (pick a direction!), North Greenville, Post, Robert Morris, Shorter, Taylor (indiana schools!), Texas Wesleyan, Thomas More, Upper Iowa, Virginia State, Virginia U of Lynchburg (is that not just Liberty?), Webber U.\nNow the fun part (load groan): What is Maryland up to in this dataset?\n\n\nCode\nthirdandsix |&gt; \n  filter(pos_team == \"Maryland\") |&gt; \n  group_by(play_type) |&gt; \n  summarize(n = n()) |&gt; \n  arrange(desc(n))\n\n\n# A tibble: 12 × 2\n   play_type                      n\n   &lt;chr&gt;                      &lt;int&gt;\n 1 Pass Reception                27\n 2 Pass Incompletion             18\n 3 Rush                          17\n 4 Penalty                        6\n 5 Sack                           4\n 6 Timeout                        4\n 7 Passing Touchdown              2\n 8 Field Goal Good                1\n 9 Fumble Recovery (Opponent)     1\n10 Fumble Return Touchdown        1\n11 Interception Return            1\n12 Rushing Touchdown              1\n\n\nOver the course of the whole data set, Maryland’s play distribution basically lines up with the rest of the sport. Maryland certainly had a majority of passing plays, and its percentage of running plays relative to its total plays run is about the same 20% as the national average.\nAnd now let’s see how those numbers have changed year to year.\n\n\nCode\nthirdandsix |&gt; \n  filter(pos_team == \"Maryland\") |&gt; \n  group_by(year, play_type) |&gt; \n  summarize(n = n(), .groups = \"drop\") |&gt; \n  arrange(year) |&gt; \n  ggplot(aes(x = year, y = n, color = play_type, group = play_type)) +\n  geom_line(size = 1.2) +\n  geom_point(size = 3) +\n  labs(\n    title = \"Maryland relied on the run often on third and six from 2021-2023\",\n    x = \"\",\n    y = \"Number of Plays\",\n    color = \"Play Type\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    axis.text.x = element_text(size = 10)\n  )\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nWhile Maryland’s overall numbers are about in line with the national average, it has fluctuated a lot to get there. In 2021, 2022 AND 2023, Maryland ran the ball on third and six either just as much or more than any other play type. While we know the run CAN work, that is WAY too much running relative to the success rate of running on third-and-medium. Maryland largely reversed course in 2024 and this year with passing completions either tied for or leading the way each year.\nBut, over the course of the whole data set, Maryland averaged 6.12 yards on third and six, which may be enough to justify a pretty cowardly scheme.\n\n\nCode\nthirdandsix |&gt; \n  filter(pos_team == \"Maryland\" & play_type == \"Rush\") |&gt; \n  summarize(avg_yards = mean(yards_gained))\n\n\n# A tibble: 1 × 1\n  avg_yards\n      &lt;dbl&gt;\n1      6.12\n\n\nSo what’s the takeaway here?\nMaybe offensive coordinators do know what they are doing. Is running the ball on third and six fun? No, no it is not. But national averages show the running can get close enough to the first down marker to make it worth the attempt. And, depending on the field position, running also could set up a very manageable fourth down if it does come up a bit short.\nAs fans, we want to see the flashy play. Sometimes flashy isn’t necessary. Just because a team throws the ball doesn’t mean they are going to air it out past the first down marker. Nor does it mean a big passing play makes sense. Six yards is not insignificant, but it also isn’t a distance to freak out and drop half the playbook over. The data backs that up."
  }
]